---
# This pipeline is used to bump the recommended Jenkins core version in the properties file.
name: Bump the recommended Jenkins core version in the pom.xml file
# SCM configuration for GitHub repository
scms:
  default:
    kind: github
    spec:
      user: "{{ .github.user }}"
      email: "{{ .github.email }}"
      owner: "{{ .github.owner }}"
      repository: "{{ .github.repository }}"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      branch: "{{ .github.branch }}"

# Source configuration to get the minimal Jenkins LTS version
sources:
  JenkinsMinimalLTS:
    name: Get the minimal Jenkins LTS version
    kind: shell
    spec:
      command: bash ./updatecli/scripts/jenkins-lts.sh 2 # Shell command to retrieve the previous Jenkins LTS version

# Condition to test that the previous LTS Jenkins version exists
conditions:
  JenkinsMinimalLTSVersion:
    kind: jenkins
    sourceid: JenkinsMinimalLTS

# Target configuration to update the Jenkins LTS version in the pom.xml file
targets:
  update-jenkins-lts-version:
    name: "Update Jenkins LTS version in pom.xml"
    kind: file
    spec:
      file: ./pom.xml # Path to the pom.xml file
      matchPattern: "<jenkins.core.minimum.version>.*</jenkins.core.minimum.version>" # Regex pattern to match the jenkins.core.minimum.version property
      replacePattern: '<jenkins.core.minimum.version>{{ source "JenkinsMinimalLTS" }}</jenkins.core.minimum.version>' # Replacement pattern to update the version
    sourceid: JenkinsMinimalLTS
    scmid: default

# Action to create a GitHub pull request with the changes
actions:
  default:
    kind: github/pullrequest
    scmid: default
    title: 'chore(properties): Bump the recommended Jenkins core version to {{ source "JenkinsMinimalLTS" }} in the `pom.xml` file' # Title of the pull request
    spec:
      labels:
        - dependencies
        - chore
